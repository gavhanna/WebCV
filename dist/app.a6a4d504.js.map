{"version":3,"sources":["node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/inherits.js","node_modules/@babel/runtime/helpers/typeof.js","node_modules/@babel/runtime/helpers/assertThisInitialized.js","node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","node_modules/@babel/runtime/helpers/getPrototypeOf.js","node_modules/@babel/runtime/helpers/isNativeFunction.js","node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","node_modules/@babel/runtime/helpers/construct.js","node_modules/@babel/runtime/helpers/wrapNativeSuper.js","src/components/Header.js","src/components/Body.js","node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","src/components/CV.js","src/app.js"],"names":["template","document","createElement","innerHTML","Header","data","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","querySelector","innerText","firstName","middleName","lastName","_renderName","description","HTMLElement","window","customElements","define","Body","container","d","map","c","item","type","_paragraph","_list","experience","forEach","exp","div","title","company","location","date","start","end","body","b","_renderHTMLBlock","join","console","log","_renderBody","require","CV","cvURI","parentElement","containerElement","_importCVData","attributes","uri","value","header","fetch","cvData","json","attachHeader","attachBody","error"],"mappings":"AKAA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AKAA,ACAA,AHAA,AJAA,AEAA,AOAA,AIAA,AGAAiD,OAAO,CAAC,qBAAD,CAAP;AbCA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AKAA,ACAA,AHAA,AJAA,AEAA,AOAA,AIAA,ADDA;ATEA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AKAA,ACAA,AHAA,AJAA,AEAA,AOAA,AGDA,AIAAA,OAAO,CAAC,mBAAD,CAAP;AbEA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AKAA,ACAA,AHAA,AJAA,AEAA,AOAA,AGDA;ATEA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AKAA,ACAA,AHAA,AJAA,AEAA,AOAA,AGDA,AIDAA,OAAO,CAAC,iBAAD,CAAP,EAEA;AbCA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AMAA,AHAA,AJAA,AEAA,AOAA,AGDA,AICA;AbCA,AWAA,AhBAA,AUAA,ATAA,AMAA,AJAA,AMAA,AHAA,AJAA,AEAA,AOAA,AGDA,AICA;AbCA,AWAA,ANAA,ATAA,AMAA,AJAA,AMAA,AHAA,AJAA,AEAA,AOAA,AGDA,AICA;AbCA,AWAA,ANAA,ATAA,AEAA,AMAA,AHAA,AJAA,AEAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,AMAA,AHAA,AJAA,AEAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,AMAA,AHAA,AFAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,AMAA,AHAA,AFAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,AMAA,AHAA,AFAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,AMAA,ALAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,ACAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,ACAA,AOAA,AGDA,AICA;AFCA,ANAA,ATAA,AEAA,ACAA,AOAA,AGDA,AICA;AFCA,ANAA,APAA,AQAA,AGDA,AICA;AFCA,ANAA,ACAA,AGDA,AICA;AFCA,ANAA,ACAA,AGDA,AICA;AFCA,ANAA,ACAA,AGDA,AIEA,ALrBA,ADAA,ICAMjD,ADAAA,QCAQ,ADAA,GCAGC,ADAAA,QCAQ,ADAA,CCACC,ADAAA,aCAT,ADAA,CCAuB,ADAA,UCAvB,ADAA,CCAjB,ADAA;AIqBA,ANAA,ACAA,AGDA,AIEA,ALrBAF,ADAAA,QCAQ,ADAA,CCACG,ADAAA,SCAT,ADAA;AIqBA,ALAA,AGDA,AIEA;AFAA,ALAA,AGDA,AIEA,ILZMoB,ADEAnB;AIUN,ALAA,AGDA,AIEA,ADzBA6C,OAAO,CAAC,UAAD,CAAP;ADyBA,ALAA,AGDA,AIGA;AFDA,ALAA,AGDA,AIGA,AD1BA,IAAMjD,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;ADyBA,ALAA,AGDA,AIGA,AD1BAF,QAAQ,CAACG,SAAT;ADyBA,ALAA,AGDA,AIIA,ALlBI,ADEA,gBCFYE,EDEAA,ECFZ,EAAkB,ADElB,EAAkB;AIctB,ALAA,AGDA,AIIA,ALnBsB,ADEA,IKNhB6C;ADqBN,ALAA,AGDA,AIIA;AFFA,ALAA,AGDA,AIIA,ALrBsB,ADEA;AIiBtB,ALAA,AGDA,AIIA,ALrBQ,ADEA;AIiBR,ALAA,AGDA,AIIA;AFFA,ALAA,AGDA,AIIA,ALtBQ,AILJ,ALOI,UCFK5C,ADEAA,IKPG6C,KAAZ,EAA2C,CJKvC,ADEA,CCFkB,ADEA;AIkB1B,ALAA,AGDA,AIIA,ALvB4B5C,AILmB,ALOnBA,MCFAA,ADEAA,ICFI,ADEA,ECFE,ADEA;AImBlC,ALAA,AGDA,ADpB0B,ADEA,KCFlB,ADEA;ADoBR,AGDA,AG1B+C,QAAxB6C,aAAwB,uEAAR,MAAQ;AN4B/C,AGDA,ADrBQ,AINuC,ALQvC,UCFK5C,ADEAA,UCFL,ADEA,CCFgBC,ADEAA,WCFhB,ADEA,CCF4BT,ADEAA,QCFQ,ADEA,CCFCU,ADEAA,OCFT,ADEA,CCFiBC,ADEAA,SCFjB,ADEA,CCF2B,ADEA,ICF3B,ADEA,CCF5B,ADEA;ADqBR,AGDA,AG3BQ;AN6BR,AGDA,ADtBQ,ADFc,UCETa,SAAL,GAAiB,MAAKhB,UAAL,CAAgBI,aAAhB,CAA8B,SAA9B,CAAjB;AFwBR,AGDA,AD3BsB,AIDd,ALOH,UKPQN,YAAL,CA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":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","const template = document.createElement('template');\ntemplate.innerHTML = `\n    <style>\n        h1 {\n            color: coral;\n        }\n    </style>\n\n    <header>\n        <h1></h1>\n        <p></p>\n    </header>\n`;\n\nclass Header extends HTMLElement {\n    constructor(data) {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    _renderName() {\n        this.shadowRoot.querySelector('h1').innerText = `${\n            this.data.firstName\n        } ${\n            this.data.middleName\n                ? this.data.middleName + ' ' + this.data.lastName\n                : this.data.lastName\n        }`;\n    }\n\n    connectedCallback() {\n        if (this.data) {\n            this._renderName();\n            this.shadowRoot.querySelector(\n                'p'\n            ).innerText = this.data.description;\n        }\n    }\n}\n\nwindow.customElements.define('cv-header', Header);\n","const template = document.createElement('template');\ntemplate.innerHTML = `\n    <style>\n        section {\n            color: #353535;\n        }\n    </style>\n\n    <section>\n    </section>\n`;\n\nclass Body extends HTMLElement {\n    constructor(data) {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n        this.container = this.shadowRoot.querySelector('section');\n    }\n\n    _paragraph(d) {\n        return `<p>${d.content}</p>`;\n    }\n\n    _list(d) {\n        return `<ul>\n            ${d.content.map((c) => {\n                return `<li><strong>${c.item}</strong> - ${c.description}</li>`;\n            })}\n        </ul>`;\n    }\n\n    _renderHTMLBlock(data) {\n        switch (data.type) {\n            case 'p':\n                return this._paragraph(data);\n            case 'ul':\n                return this._list(data);\n            default:\n                return '';\n        }\n    }\n\n    _renderBody() {\n        const { experience } = this.data;\n        experience &&\n            experience.forEach((exp) => {\n                const div = document.createElement('div');\n                div.innerHTML = `\n                    <h3>${exp.title} - ${exp.company}, ${exp.location}</h3>\n                    <aside>${exp.date.start} - ${\n                    exp.date.end || 'PRESENT'\n                }</aside>\n                <div class=\"body-copy\">\n                    ${exp.body.map((b) => this._renderHTMLBlock(b)).join('')}\n                </div>\n                `;\n                this.container.appendChild(div);\n            });\n    }\n\n    connectedCallback() {\n        if (this.data) {\n            console.log(this.data);\n            this._renderBody();\n        }\n    }\n}\n\nwindow.customElements.define('cv-body', Body);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","require('./Header');\n\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n    <article>\n        \n    </article>\n`;\n\nclass CV extends HTMLElement {\n    constructor(cvURI, parentElement = 'body') {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(template.content.cloneNode(true));\n        this.containerElement = this.shadowRoot.querySelector('article');\n        this.containerElement.innerHTML =\n            '<div class=\"loader\">Loading...</div>';\n    }\n\n    async connectedCallback() {\n        await this._importCVData(this.attributes.uri.value);\n    }\n\n    attachHeader() {\n        const header = document.createElement('cv-header');\n        header.data = this.content.title;\n        this.shadowRoot.querySelector('article').appendChild(header);\n    }\n\n    attachBody() {\n        const body = document.createElement('cv-body');\n        body.data = this.content.body;\n        this.shadowRoot.querySelector('article').appendChild(body);\n    }\n\n    async _importCVData(cvURI) {\n        try {\n            const cvData = await fetch(cvURI);\n            this.content = await cvData.json();\n            this.containerElement.innerHTML = '';\n            this.attachHeader();\n            this.attachBody();\n            console.log(this.content);\n        } catch (err) {\n            console.error(err);\n            this.containerElement.innerHTML = `<div class=\"failed\">Error: ${err}</div>`;\n        }\n    }\n}\n\nwindow.customElements.define('web-cv', CV);\n","require('./components/Header');\nrequire('./components/Body');\nrequire('./components/CV');\n\n// class CV {\n//     constructor(cvURI, parentElement = 'body') {\n//         this.parentElement = parentElement;\n//         this._importCVData(cvURI);\n//         this.el = {};\n//         this.el.container = document.createElement('div');\n//     }\n//     async _importCVData(cvURI) {\n//         try {\n//             const cvData = await fetch(cvURI);\n//             this.content = await cvData.json();\n//             this.render();\n//         } catch (err) {\n//             console.error(err);\n//         }\n//     }\n\n//     _generateHeader() {\n//         const cvHeader = document.createElement('cv-header');\n//         cvHeader.data = this.content.title;\n//         return cvHeader;\n//     }\n\n//     _generateHTML() {\n//         this.el.container.appendChild(this._generateHeader());\n//     }\n\n//     render() {\n//         this.el.container.innerHTML = '';\n//         this._generateHTML();\n//         document\n//             .querySelector(this.parentElement)\n//             .appendChild(this.el.container);\n//     }\n// }\n"]}